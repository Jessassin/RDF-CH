#=========================================================================#
#
# RDF Server Inventory Management System & Admin Chat
# Authored by: Redstonewarrior
# Rewrite: Jessassin
# Contributors: Jessassin
#
# Requires: ch.alias.admin
# Requires: ch.alias.all
# Risk: low/none
#
#=========================================================================#
*:/ac [$=''] = >>>
_checkpermission('admin',player())
if(equals(length($),0),
	msg(_acmessage())
	die()
)
_adminchat(player(),$)
<<<

*:/'#' [$=''] = >>>
_checkpermission('admin',player())
if(equals(length($),0),
	msg(_acmessage())
	die()
)
_adminchat(player(),$)
<<<

*:/adminchat = >>>
_checkpermission('admin',player())
msg(_acmessage())
<<<

*:/inventorystorage = >>>
_checkpermission('admin',player())
msg(concat(color(a),'[Inventory Storage] ',color(6), 'Use /is instead!'))
<<<

*:/is [$arg1=''] [$arg2=''] = >>>
_checkpermission('all',player())
assign(@syntax,'/is <list,help,clearall>')
assign(@syntax2,'/is <save,load,remove> <name>')
assign(@arg1,$arg1)
assign(@arg2,$arg2)
assign(@acceptablearg1,array('save','load','remove','list','help','clearall'))
assign(@has_secondary,array('save','load','remove'))
if(lt(length(@arg1),1),
	die(concat(color(a),'[Inventory Storage] ',color(6),'Type /is help for help.'))
)
if(not(array_contains_ic(@acceptablearg1,@arg1)),
	msg(concat(color(a),'[Inventory Storage] ',color(c),@arg1,color(6),' is not recognized!'))
	msg(concat(color(a),'[Inventory Storage] ',color(6),@syntax))
	die(concat(color(a),'[Inventory Storage] ',color(6),@syntax2))
)
if(
	and(
		not(array_contains_ic(@has_secondary,@arg1)),
		not(lt(length(@arg2),1))
	),
		msg(concat(@arg1,' Does not have a secondary argument!'))
		msg(concat(color(a),'[Inventory Storage] ',color(6),@syntax))
		die(concat(color(a),'[Inventory Storage] ',color(6),@syntax2))
)
if(equals_ic(@arg1,'list'),
	assign(@msg,concat(color(a),'[Inventory Storage] ',color(6),'The following inventories are available: ',color(f)))
		foreach(array_keys(get_values(concat('is.',player(),'.'))),@key,
		assign(@msg,concat(@msg, substr(@key,add(3,length(player()),1)), ',')))
		msg(@msg)
)

if(equals_ic(@arg1,'save'),
	store_value(concat('is.',player(),'.',@arg2), array(player(),pinv()))
	die(concat(color(a),'[Inventory Storage] ',color(6), 'Successfully stored inventory: ', @arg2))
)

if(equals_ic(@arg1,'load'),
	try(set_pinv(get_value(concat('is.',player(),'.', @arg2))[1]),@error,
    die(concat(color(a),'[Inventory Storage] ',color(6),'Inventory not found!')))
	die(concat(color(a),'[Inventory Storage] ',color(6),'Inventory Loaded'))
)

if(equals_ic(@arg1,'remove'),
	clear_value(concat('is.',player(),'.',@arg2))
	die(concat(color(a),'[Inventory Storage] ',color(6),'Inventory Removed'))
)

if(equals_ic(@arg1,'clearall'),
	foreach(array_keys(get_values('is.')),@key,
	clear_value(@key))
	msg(concat(color(a),'[Inventory Storage] ',color(6),'Inventories cleared.'))
)

if(equals_ic(@arg1,'help'),
	msg(concat(color(a),'[Inventory Storage]',color(6),': Inventory Storage. This script essentually allows you to store multiple inventories and switch between them. Options:'))
	msg(concat(color(a),'/is ',color(b),'load ',color(c), '<name>', color(f),': Loads the named inventory.'))
	msg(concat(color(a),'/is ',color(b),'save ',color(c), '<name>', color(f),': Saves your inventory as <name>.'))
	msg(concat(color(a),'/is ',color(b),'store ',color(c), '<name>', color(f),': Same as above, to avoid confusion.'))
	msg(concat(color(a),'/is ',color(b),'remove ',color(c), '<name>',color(f),': Removes the named inventory.'))
	msg(concat(color(a),'/is ',color(b),'list',color(f), ': Lists the saved inventories.'))
	msg(concat(color(a),'/is ',color(b),'help',color(f), ': Shows this message.'))
	msg(concat(color(a),'/is ',color(b),'clearAll',color(f),': Removes all stored inventories.'))
#msg(concat(color(a),'/is ',color(b),'who',color(c),' <name>',color(f),': Outputs the last player to edit an inventory.'))
)
<<<
